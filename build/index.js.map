{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.jsx", "../app/root.jsx", "../app/routes/dashboard.jsx", "../app/utils/auth/auth.server.js", "../app/utils/auth/session.server.js", "../app/routes/dashboard/todos.$todoId.jsx", "../app/routes/dashboard/todos.update.jsx", "../app/routes/dashboard/todos.new.jsx", "../app/routes/dashboard/index.jsx", "../app/routes/dashboard/todos.jsx", "../app/routes/logout.js", "../app/routes/index.jsx", "../app/components/navigation/mainNavigation.jsx", "../app/components/navigation/navbarLink.jsx", "../app/routes/auth.jsx", "../app/components/layouts/form-wrapper.jsx", "../app/utils/auth/validate.server.js", "../app/utils/data/user.server.js", "../app/utils/config/prisma.server.js", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\r\n\r\nimport { Response } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5000;\r\n\r\nexport default function handleRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let didError = false;\r\n\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer context={remixContext} url={request.url} />,\r\n      {\r\n        onAllReady() {\r\n          const body = new PassThrough();\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(body, {\r\n              headers: responseHeaders,\r\n              status: didError ? 500 : responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error) {\r\n          reject(error);\r\n        },\r\n        onError(error) {\r\n          didError = true;\r\n\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let didError = false;\r\n\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer context={remixContext} url={request.url} />,\r\n      {\r\n        onShellReady() {\r\n          const body = new PassThrough();\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(body, {\r\n              headers: responseHeaders,\r\n              status: didError ? 500 : responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(err) {\r\n          reject(err);\r\n        },\r\n        onError(error) {\r\n          didError = true;\r\n\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\"\r\n\r\nimport styles from \"~/styles/tailwind.css\"\r\n\r\nexport const meta = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"New Remix App\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n})\r\n\r\nexport const links = () => [{ rel: \"stylesheet\", href: styles }]\r\n\r\nexport default function App() {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>\r\n  )\r\n}\r\n", "import { json, redirect } from \"@remix-run/node\"\r\nimport { requireUserSession } from \"~/utils/auth/auth.server\"\r\nimport { Link, Form } from \"@remix-run/react\"\r\n\r\nexport const loader = async ({ request }) => {\r\n  await requireUserSession(request)\r\n  return null\r\n}\r\n\r\nconst DashboardLayout = () => {\r\n  return (\r\n    <div>\r\n      <h1>Layout</h1>\r\n      <Form method=\"post\" action=\"/logout\">\r\n        <button type=\"submit\" className=\"\">\r\n          Logout\r\n        </button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardLayout\r\n", "import { redirect } from \"@remix-run/node\"\r\n\r\nimport { sessionStorage } from \"./session.server\"\r\n\r\nexport async function createUserSession(userId, redirectTo) {\r\n  const session = await sessionStorage.getSession()\r\n  session.set(\"userId\", userId)\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.commitSession(session),\r\n    },\r\n  })\r\n}\r\n\r\nexport async function getUserFromSession(request) {\r\n  const session = await sessionStorage.getSession(request.headers.get(\"Cookie\"))\r\n  const userId = session.get(\"userId\")\r\n  return userId\r\n}\r\n\r\nexport async function destroyUserSession(request) {\r\n  const session = await sessionStorage.getSession(request.headers.get(\"Cookie\"))\r\n  return redirect(\"/\", {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\r\n    },\r\n  })\r\n}\r\n\r\nexport async function requireUserSession(request) {\r\n  const userId = await getUserFromSession(request)\r\n  if (!userId) {\r\n    throw redirect(\"/auth\")\r\n  }\r\n  return userId\r\n}\r\n\r\n// export async function requireUserId(\r\n//   request,\r\n//   redirectTo = new URL(request.url).pathname\r\n// ) {\r\n//   const session = await getUserSession(request)\r\n//   const userId = session.get(\"userId\")\r\n//   if (!userId || typeof userId !== \"string\") {\r\n//     const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]])\r\n//     throw redirect(`/login?${searchParams}`)\r\n//   }\r\n//   return userId\r\n// }\r\n\r\n// export async function getUserId(request) {\r\n//   const session = await getUserSession(request)\r\n//   const userId = session.get(\"userId\")\r\n//   if (!userId) {\r\n//     return json({ error: \"Not logged in\" }, { status: 401 })\r\n//   }\r\n//   return userId\r\n// }\r\n\r\n// export async function getUser(request) {\r\n//   const userId = await getUserId(request)\r\n//   try {\r\n//     const user = await prisma.user.findUnique({\r\n//       where: { id: userId },\r\n//       select: { id: true, email: true, profile: true },\r\n//     })\r\n//     return user\r\n//   } catch {\r\n//     throw logout(request)\r\n//   }\r\n// }\r\n\r\n// export async function logout(request) {\r\n//   const session = await getUserSession(request)\r\n//   return redirect(\"/login\", {\r\n//     headers: {\r\n//       \"Set-Cookie\": await storage.destroySession(session),\r\n//     },\r\n//   })\r\n// }\r\n", "import { createCookieSessionStorage } from \"@remix-run/node\"\r\n\r\nconst sessionSecret = process.env.SESSION_SECRET\r\nif (!sessionSecret) {\r\n  throw new Error(\"SESSION_SECRET must be set\")\r\n}\r\n\r\nexport const sessionStorage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"session\",\r\n    secure: true,\r\n    secrets: [sessionSecret],\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    httpOnly: true,\r\n    maxAge: 24 * 60 * 60,\r\n  },\r\n})\r\n", "import React from \"react\"\r\n\r\nconst Todo = () => {\r\n  return <div>Todo</div>\r\n}\r\n\r\nexport default Todo\r\n", "import React from \"react\"\r\n\r\nconst UpdateTodo = () => {\r\n  return <div>UpdateTodo</div>\r\n}\r\n\r\nexport default UpdateTodo\r\n", "import React from \"react\"\r\n\r\nconst NewTodo = () => {\r\n  return <div> CreateTodo</div>\r\n}\r\n\r\nexport default NewTodo\r\n", "import React from \"react\"\r\n\r\nconst Dashboard = () => {\r\n  return <div>Dashboard</div>\r\n}\r\n\r\nexport default Dashboard\r\n", "import React from \"react\"\r\n\r\nconst Todos = () => {\r\n  return <div>Todos</div>\r\n}\r\n\r\nexport default Todos\r\n", "import { json } from \"@remix-run/node\"\r\nimport { destroyUserSession } from \"~/utils/auth/auth.server\"\r\n\r\nexport function action({ request }) {\r\n  if (request.method !== \"POST\") {\r\n    throw json({ message: \"Invalid request method\" }, { status: 400 })\r\n  }\r\n\r\n  return destroyUserSession(request)\r\n}\r\n", "import Button from \"~/components/common/Button\"\r\nimport { Link } from \"@remix-run/react\"\r\n\r\nimport Navbar from \"~/components/navigation/mainNavigation\"\r\nimport NavbarListLink from \"~/components/navigation/navbarLink\"\r\n\r\nconst navProps = { color: \"orange\", className: \"text-white\" }\r\n\r\nexport default function Index() {\r\n  return (\r\n    <div className=\"w-full\">\r\n      <Navbar {...navProps}>\r\n        <NavbarListLink to=\"/dashboard\">Dashboard</NavbarListLink>\r\n        <NavbarListLink to=\"/auth\">Login</NavbarListLink>\r\n      </Navbar>\r\n\r\n      <br></br>\r\n      <button\r\n        type=\"button\"\r\n        className=\"mr-3 inline-block px-6 py-3 font-bold text-center bg-gradient-to-tl from-blue-500 to-violet-500 uppercase align-middle transition-all rounded-lg cursor-pointer leading-normal text-xs ease-in tracking-tight-rem shadow-xs bg-150 bg-x-25 hover:-translate-y-px active:opacity-85 hover:shadow-md text-white\"\r\n      >\r\n        Button\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n", "import React from \"react\"\r\n//import PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\"\r\n\r\nexport default function Navbar({ children, color, className, ...rest }) {\r\n  const colors = {\r\n    light: \"bg-blueGray-200\",\r\n    dark: \"bg-blueGray-800\",\r\n    transparent: \"bg-transparent\",\r\n    white: \"bg-white\",\r\n    blueGray: \"bg-blueGray-500\",\r\n    red: \"bg-red-500\",\r\n    orange: \"bg-orange-500\",\r\n    amber: \"bg-amber-500\",\r\n    emerald: \"bg-emerald-500\",\r\n    teal: \"bg-teal-500\",\r\n    lightBlue: \"bg-lightBlue-500\",\r\n    indigo: \"bg-indigo-500\",\r\n    purple: \"bg-purple-500\",\r\n    pink: \"bg-pink-500\",\r\n  }\r\n  return (\r\n    <>\r\n      <nav\r\n        {...rest}\r\n        className={classnames(\r\n          \"w-full flex flex-wrap items-center justify-between px-2 py-3 mb-3\",\r\n          colors[color],\r\n          className\r\n        )}\r\n      >\r\n        {children}\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\n// Navbar.defaultProps = {\r\n//   color: \"white\",\r\n//   className: \"\",\r\n// };\r\n\r\n// Navbar.propTypes = {\r\n//   children: PropTypes.node,\r\n//   className: PropTypes.string,\r\n//   color: PropTypes.oneOf([\r\n//     \"light\",\r\n//     \"dark\",\r\n//     \"transparent\",\r\n//     \"white\",\r\n//     \"blueGray\",\r\n//     \"red\",\r\n//     \"orange\",\r\n//     \"amber\",\r\n//     \"emerald\",\r\n//     \"teal\",\r\n//     \"lightBlue\",\r\n//     \"indigo\",\r\n//     \"purple\",\r\n//     \"pink\",\r\n//   ]),\r\n// };\r\n", "import React from \"react\"\r\n//import PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport { Link } from \"@remix-run/react\"\r\n\r\nexport default function NavbarListLink({\r\n  children,\r\n  className,\r\n  breakpoint,\r\n  type,\r\n  to,\r\n  ...rest\r\n}) {\r\n  const types = {\r\n    light: \"text-white\",\r\n    dark: \"text-blueGray-800\",\r\n  }\r\n  const breakpoints = {\r\n    all: \"py-2\",\r\n    sm: \"py-4 sm:py-2\",\r\n    md: \"py-4 md:py-2\",\r\n    lg: \"py-4 lg:py-2\",\r\n    xl: \"py-4 xl:py-2\",\r\n  }\r\n  const classes = classnames(\r\n    \"hover:opacity-75 px-3 flex items-center text-xs uppercase font-bold transition-all duration-150 ease-in-out\",\r\n    className,\r\n    types[type],\r\n    breakpoints[breakpoint]\r\n  )\r\n  return (\r\n    <>\r\n      {to && (\r\n        <Link {...rest} to={to} className={classes}>\r\n          {children}\r\n        </Link>\r\n      )}\r\n      {to === undefined && (\r\n        <a {...rest} className={classes}>\r\n          {children}\r\n        </a>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\n// NavbarListLink.defaultProps = {\r\n//   className: \"\",\r\n//   type: \"light\",\r\n// }\r\n\r\n// NavbarListLink.propTypes = {\r\n//   children: PropTypes.node,\r\n//   className: PropTypes.string,\r\n//   // light is for white text\r\n//   // dark is for text-blueGray-800\r\n//   type: PropTypes.oneOf([\"light\", \"dark\"]),\r\n//   // where the padding should start being smaller\r\n//   breakpoint: PropTypes.oneOf([\"all\", \"sm\", \"md\", \"lg\", \"xl\"]),\r\n// }\r\n", "import { json, redirect } from \"@remix-run/node\"\r\nimport { getUserFromSession } from \"~/utils/auth/auth.server\"\r\nimport { useActionData, Link, useSearchParams, Form } from \"@remix-run/react\"\r\n\r\nimport FormWrapper from \"~/components/layouts/form-wrapper\"\r\nimport {\r\n  validateEmail,\r\n  validatePassword,\r\n  validateUsername,\r\n  validateCredentials,\r\n} from \"../utils/auth/validate.server\"\r\n\r\nimport { login, register } from \"../utils/data/user.server\"\r\n\r\nexport const loader = async ({ request }) => {\r\n  const userId = await getUserFromSession(request)\r\n  if (userId) return redirect(\"/dashboard\")\r\n  return json({})\r\n}\r\n\r\nexport async function action({ request }) {\r\n  const searchParams = new URL(request.url).searchParams\r\n  const authMode = searchParams.get(\"mode\") || \"login\"\r\n\r\n  const formData = await request.formData()\r\n  const credentials = Object.fromEntries(formData)\r\n\r\n  try {\r\n    validateCredentials(credentials)\r\n  } catch (error) {\r\n    return error\r\n  }\r\n\r\n  try {\r\n    if (authMode === \"login\") {\r\n      return await login(credentials)\r\n    } else {\r\n      return await register(credentials)\r\n    }\r\n  } catch (error) {\r\n    if (error.status === 422) {\r\n      return { credentials: error.message }\r\n    }\r\n  }\r\n}\r\n\r\n// export async function action({ request }) {\r\n//   const searchParams = new URL(request.url).searchParams\r\n//   const authMode = searchParams.get(\"mode\") || \"login\"\r\n\r\n//   const formData = await request.formData()\r\n//   const email = formData.get(\"email\") || \"\"\r\n//   const password = formData.get(\"password\") || \"\"\r\n//   const username = formData.get(\"username\") || \"\"\r\n\r\n//   try {\r\n//     if (authMode === \"login\") {\r\n//       return await login(email, password)\r\n//     } else {\r\n//       return await register(username, email, password)\r\n//     }\r\n//   } catch (error) {\r\n//     return json({ error: error.message }, { status: 400 })\r\n//   }\r\n\r\n//   // try {\r\n//   //   if (authMode === \"login\") {\r\n//   //     if (!validateEmail(email)) {\r\n//   //       return json({ email: \"Invalid email\", password: null }, { status: 400 })\r\n//   //     }\r\n//   //     if (!validatePassword(password)) {\r\n//   //       return json(\r\n//   //         { email: null, password: \"Invalid password\" },\r\n//   //         { status: 400 }\r\n//   //       )\r\n//   //     }\r\n\r\n//   //     await login(email, password)\r\n//   //   } else {\r\n//   //     if (!validateEmail(email)) {\r\n//   //       return json({ email: \"Invalid email\", password: null }, { status: 400 })\r\n//   //     }\r\n//   //     if (!validatePassword(password)) {\r\n//   //       return json(\r\n//   //         { email: null, password: \"Invalid password\" },\r\n//   //         { status: 400 }\r\n//   //       )\r\n//   //     }\r\n//   //     if (!validateUsername(username)) {\r\n//   //       return json(\r\n//   //         { username: \"Invalid username\", email: null, password: null },\r\n//   //         { status: 400 }\r\n//   //       )\r\n//   //     }\r\n//   //     console.log(username, email, password)\r\n//   //     await register(username, email, password)\r\n//   //   }\r\n//   // } catch (error) {\r\n//   //   return json({ error: error.message }, { status: 400 })\r\n//   // }\r\n// }\r\n\r\nconst Login = () => {\r\n  const [searchParams] = useSearchParams()\r\n  const validationErrors = useActionData()\r\n\r\n  const authMode = searchParams.get(\"mode\") || \"login\"\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <div className=\"w-full max-w-xs\">\r\n        <h1 className=\"text-center font-semibold uppercase mb-3\">\r\n          {authMode === \"login\" ? \"Login\" : \"Register\"}\r\n        </h1>\r\n        <Form\r\n          method=\"post\"\r\n          className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\r\n          autoComplete=\"off\"\r\n        >\r\n          <div className=\"mb-4\">\r\n            <label\r\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n              htmlFor=\"email\"\r\n            >\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n            />\r\n            {validationErrors?.email && (\r\n              <p className=\"text-red-500 text-xs italic\">\r\n                {validationErrors.email}\r\n              </p>\r\n            )}\r\n          </div>\r\n          {authMode === \"signup\" && (\r\n            <div className=\"mb-4\">\r\n              <label\r\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                htmlFor=\"username\"\r\n              >\r\n                Username\r\n              </label>\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n              />\r\n              {validationErrors?.username && (\r\n                <p className=\"text-red-500 text-xs italic\">\r\n                  {validationErrors.email}\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div className=\"mb-6\">\r\n            <label\r\n              className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n              htmlFor=\"password\"\r\n            >\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"******************\"\r\n            />\r\n            {validationErrors?.password && (\r\n              <p className=\"text-red-500 text-xs italic\">\r\n                {validationErrors.password}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <button\r\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n              type=\"submit\"\r\n            >\r\n              {authMode === \"login\" ? \"Login\" : \"Register\"}\r\n            </button>\r\n            <Link\r\n              className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\"\r\n              to={authMode === \"login\" ? \"?mode=signup\" : \"?mode=login\"}\r\n            >\r\n              {authMode === \"login\"\r\n                ? \"Dont have an account?\"\r\n                : \"Have an account?\"}\r\n            </Link>\r\n          </div>\r\n        </Form>\r\n        <p className=\"text-center text-gray-500 text-xs\">\r\n          &copy;2020 Acme Corp. All rights reserved.\r\n        </p>\r\n      </div>\r\n    </FormWrapper>\r\n  )\r\n}\r\n\r\nexport default Login\r\n", "import React from \"react\"\r\n\r\nconst FormWrapper = ({ children }) => {\r\n  return (\r\n    <div className=\"h-screen flex justify-center items-center\">{children}</div>\r\n  )\r\n}\r\n\r\nexport default FormWrapper\r\n", "// export const validateEmail = (email) => {\r\n//   var validRegex =\r\n//     /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n//   return !email.length || !validRegex.test(email)\r\n// }\r\n\r\n// export function validateEmail(email) {\r\n//   return typeof email === \"string\" && !email.length > 3 && !email.includes(\"@\")\r\n// }\r\n\r\n// export const validatePassword = (password) => {\r\n//   return !password.length || !password.length < 6\r\n// }\r\n\r\n// export const validateUsername = (name) => {\r\n//   return !name.length || name.length < 3\r\n// }\r\n\r\n// export const validateTodoTitle = (title) => {\r\n//   if (!title.length) return `Please enter a value`\r\n// }\r\n\r\n// export const validateTodoContent = (content) => {\r\n//   if (!content.length) return `Please enter a value`\r\n// }\r\n\r\nfunction isValidTitle(value) {\r\n  return value && value.trim().length > 0 && value.trim().length <= 30\r\n}\r\n\r\nfunction isValidAmount(value) {\r\n  const amount = parseFloat(value)\r\n  return !isNaN(amount) && amount > 0\r\n}\r\n\r\nfunction isValidDate(value) {\r\n  return value && new Date(value).getTime() < new Date().getTime()\r\n}\r\n\r\nexport function validateExpenseInput(input) {\r\n  let validationErrors = {}\r\n\r\n  if (!isValidTitle(input.title)) {\r\n    validationErrors.title =\r\n      \"Invalid expense title. Must be at most 30 characters long.\"\r\n  }\r\n\r\n  if (!isValidAmount(input.amount)) {\r\n    validationErrors.amount =\r\n      \"Invalid amount. Must be a number greater than zero.\"\r\n  }\r\n\r\n  if (!isValidDate(input.date)) {\r\n    validationErrors.date = \"Invalid date. Must be a date before today.\"\r\n  }\r\n\r\n  if (Object.keys(validationErrors).length > 0) {\r\n    throw validationErrors\r\n  }\r\n}\r\n\r\nfunction isValidEmail(value) {\r\n  return value && value.includes(\"@\")\r\n}\r\n\r\nfunction isValidPassword(value) {\r\n  return value && value.trim().length >= 7\r\n}\r\n\r\nexport function validateCredentials(input) {\r\n  let validationErrors = {}\r\n\r\n  if (!isValidEmail(input.email)) {\r\n    validationErrors.email = \"Invalid email address.\"\r\n  }\r\n\r\n  if (!isValidPassword(input.password)) {\r\n    validationErrors.password =\r\n      \"Invalid password. Must be at least 7 characters long.\"\r\n  }\r\n\r\n  if (Object.keys(validationErrors).length > 0) {\r\n    throw validationErrors\r\n  }\r\n}\r\n", "import bcrypt from \"bcryptjs\"\r\nimport { json } from \"@remix-run/node\"\r\n\r\nimport { prisma } from \"~/utils/config/prisma.server\"\r\nimport { createUserSession } from \"../auth/auth.server\"\r\n\r\nexport const createUser = async (user) => {}\r\n//export const updateUser = async (id, user) => {}\r\n//export const deleteUser = async (id) => {}\r\n//export const getUsers = async () => {}\r\n//export const getUser = async (id) => {}\r\n\r\nexport const login = async ({ email, password }) => {\r\n  try {\r\n    const user = await prisma.user.findUnique({\r\n      where: {\r\n        email,\r\n      },\r\n    })\r\n    if (!user || !(await bcrypt.compare(password, user.password))) {\r\n      return json({ error: `Incorrect login` }, { status: 400 })\r\n    }\r\n    return createUserSession(user.id, \"/dashboard\")\r\n  } catch (error) {\r\n    return json({ error: `Failed to login` }, { status: 400 })\r\n  }\r\n}\r\nexport const register = async ({ username, email, password }) => {\r\n  const existingUser = await prisma.user.findFirst({ where: { email } })\r\n  if (existingUser) {\r\n    return json({ error: `Email already exists` }, { status: 400 })\r\n  }\r\n\r\n  const passwordHash = await bcrypt.hash(password, 10)\r\n  try {\r\n    const user = await prisma.user.create({\r\n      data: {\r\n        username,\r\n        email,\r\n        password: passwordHash,\r\n      },\r\n    })\r\n    return createUserSession(user.id, \"/dashboard\")\r\n  } catch (error) {\r\n    console.log(error)\r\n    return json({ error: `Failed to register` }, { status: 400 })\r\n  }\r\n}\r\n", "import { PrismaClient } from \"@prisma/client\"\r\n\r\nlet prisma\r\n// declare global {\r\n//   var __db: PrismaClient | undefined\r\n// }\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prisma = new PrismaClient()\r\n  prisma.$connect()\r\n} else {\r\n  if (!global.__db) {\r\n    global.__db = new PrismaClient()\r\n    global.__db.$connect()\r\n  }\r\n  prisma = global.__db\r\n}\r\n\r\nexport { prisma }\r\n", "export default {'version':'01913684','entry':{'module':'/build/entry.client-2AVTCKAL.js','imports':['/build/_shared/chunk-X7HYHKD5.js','/build/_shared/chunk-VPGYRKCU.js','/build/_shared/chunk-5KL4PAQL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-SQERJTFL.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth':{'id':'routes/auth','parentId':'root','path':'auth','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth-ZGIBAQHE.js','imports':['/build/_shared/chunk-5PKAW3K5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-T6MPKD34.js','imports':['/build/_shared/chunk-5PKAW3K5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/index':{'id':'routes/dashboard/index','parentId':'routes/dashboard','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/index-KQ67CY7M.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/todos':{'id':'routes/dashboard/todos','parentId':'routes/dashboard','path':'todos','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/todos-R2AMAJHB.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/todos.$todoId':{'id':'routes/dashboard/todos.$todoId','parentId':'routes/dashboard','path':'todos/:todoId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/todos.$todoId-Z7X7D4X7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/todos.new':{'id':'routes/dashboard/todos.new','parentId':'routes/dashboard','path':'todos/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/todos.new-FILYK42Q.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/todos.update':{'id':'routes/dashboard/todos.update','parentId':'routes/dashboard','path':'todos/update','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard/todos.update-WQMEDBQQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-N2RDK3MQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-TIVGJ7SQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-01913684.js'};", "\nimport * as entryServer from \"./entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes\\\\dashboard.jsx\";\nimport * as route2 from \"./routes\\\\dashboard\\\\todos.$todoId.jsx\";\nimport * as route3 from \"./routes\\\\dashboard\\\\todos.update.jsx\";\nimport * as route4 from \"./routes\\\\dashboard\\\\todos.new.jsx\";\nimport * as route5 from \"./routes\\\\dashboard\\\\index.jsx\";\nimport * as route6 from \"./routes\\\\dashboard\\\\todos.jsx\";\nimport * as route7 from \"./routes\\\\logout.js\";\nimport * as route8 from \"./routes\\\\index.jsx\";\nimport * as route9 from \"./routes\\\\auth.jsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/dashboard/todos.$todoId\": {\n      id: \"routes/dashboard/todos.$todoId\",\n      parentId: \"routes/dashboard\",\n      path: \"todos/:todoId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/dashboard/todos.update\": {\n      id: \"routes/dashboard/todos.update\",\n      parentId: \"routes/dashboard\",\n      path: \"todos/update\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/dashboard/todos.new\": {\n      id: \"routes/dashboard/todos.new\",\n      parentId: \"routes/dashboard\",\n      path: \"todos/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/dashboard/index\": {\n      id: \"routes/dashboard/index\",\n      parentId: \"routes/dashboard\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/dashboard/todos\": {\n      id: \"routes/dashboard/todos\",\n      parentId: \"routes/dashboard\",\n      path: \"todos\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/auth\": {\n      id: \"routes/auth\",\n      parentId: \"root\",\n      path: \"auth\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_jsx_dev_runtime", "import_node", "import_node", "import_node", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "dashboard_exports", "dashboard_default", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "classnames", "import_react", "import_classnames", "import_jsx_dev_runtime", "classnames", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_node", "bcrypt", "import_jsx_dev_runtime", "loader", "action", "dashboard_exports"]
}
